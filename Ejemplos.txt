Ejemplos para probar en el interpretador:


function funcionX (a, b, c) {if ((s || (f && g))) {(5+(6+9))} else {"hola"} }

function funcionY (int a, int b, int c) {var(x=6); if ((s || (f && g))) {(5+(6+9))} else {"hola"} }

if ((((a/2)>0) && ((a/2)==0))) {var(x=2); "correcto"} else {"malo"; "peor"}

for (var(int i=1); (i < 9); (i ++ 1)) {var(int a=2, int b=5); "hola"}

function-rec funcion-recursiva (int x, int y, int z) {var(int o=call-rec funcion-recursiva (1, 2, 3))}

0x700FDA

0o74563

{var(int x=1);if (x) {true} else {false}}

((4<3)&&((5==5)||(5!=6)))

if(!(4<5)) {4} else {((3 * 4)+ (8 - 2))}

var(int q=7, int w=function Sumar (a,b,c) {(a+(b+(c+7)))}); call w (q,x,call w (1,2,3))

{
if (true) {true} else {false};
var(int y=3);
(1+2);
(1 - 2)
}

{
var(int q=1);
var(int w=2);
(q+w)
}

{
var(int q=1);
var(int w=2);
if (true) {true} else {false};
var(int e=4);
(e+(q+w))
}

{
var(int q=1);
var(int w=2);
if (true) {true} else {false};
function Sumar (a,b) {(a+b)};
var(int e=4);
call Sumar(e,q)
}

{
var(int q=1);
var(int w=2);
if (true) {true} else {false};
function Sumar (int a, int b) {(a+(b+(x+w)))};
var(int e=4);
call Sumar(e,q)
}

{
var(int q=1);
var(int w=2);
if (true) {true} else {false};
function Sumar (int a, int b) {var(int t= if (true) {5} else {6}, int u=9); (a+(b+(t+u)))};
call Sumar(1,2)
}

{
var(int q=7);
function Sumar(int a, int b){var(int w=7); (a+(b+w))};
function Restar(int a, int b) {(a - (b - q))};
var(int r=1, int t=3, int u=5);
(call Sumar(t,u) + call Restar(r,t))
}

{ 
function-rec hola(x)
{ if ((x > 0))
{(x * call-rec hola(
[x --]
)
)
}
else
{1}
}
; 
call-rec hola(6) 
}

{
struct Libro {int valor=300; string nombre="peterpan"; int capitulos=16};
struct Libro1 {int valor=350; string nombre="peterpan"; int capitulos=16};
struct Libro2 {int valor=150; string nombre="peterpan"; int capitulos=16};
(access Libro[0]+ (access Libro1[0] + access Libro2[0])) 
}

{
var(int x=0); 
for (x; (x < 10); [x ++])
{
x
}
}
